                                MongoDB Shell Commands
                           _______________________________

 Commands                                                 Actions
 ________                                                 __________

 <----------------------------DataBase Related Commands----------------------------->

 show dbs                                                 view all databases
 show databases                                           view all databases
 use <db name>                                            create a new db or to switch to an existing db
 db                                                       view current db
 db.dropDatabase()                                        delete a db 

 <---------------------------Collection Related Commands---------------------------->

 show collections                                         view all collections(Tables)
 db.createCollection('<your collection name here>')       create a new collection in the database
 db.<collection name>.drop()                              delete a collection 

<--------------------------------Row Related Commands------------------------------->

 db.<collection name>.find()                              Show all rows in the collection

 db.<collection name>.find().pretty()                     Show all rows in a better readable format

 db.<collection name>.insert({
      'name': 'Soumick',
      'age' : 24
 })                                                       Insert a single row in a collection

 
 db.<collection name>.insert([{
      'name': 'Soumick',
      'age' : 24
 },
 {
      'name': 'MSD',
      'age' : 39
 }])                                                      Insert multiple rows in a collection

 db.<collection name>.remove({name: 'MSD'})               Remove a row

<----------------------------------Search in MongoDB--------------------------------->

 db.<collection name>.find({name: 'Soumick'})             Search with a single parameter

 db.<collection name>.find({age: 39, name: 'MSD'})        Search with multiple parameters

 db.<collection name>.find().limit(n)                     Show only the top 'n' number of rows
 
 db.<collection name>.find().count()                      Count the number of rows in the collection

 db.<collection name>.find({name: 'Soumick'}).count()     Will give the count of rows which matches the given parameter

 db.<collection name>.find().sort({age: 1}).pretty()      Will display the rows in ascending order of the parameter

 db.<collection name>.find().sort({age: -1}).pretty()     Will display the rows in decending order of the parameter

 db.<collection name>.findOne({name: 'Soumick'})          Will display the 1st match only

 db.<collection name>.find().limit(n).skip(m)             Will display n documents skipping first m documents

<--------------------------------Update a specific field----------------------------->

 db.<collection name>.update({name:'MSD'},
 {
    'name': 'MSD',
    'age' : 34
 })                                                       Will modify the first match with the edits provided

 db.<collection name>.update({name:'Soumick2'},
 {
    'name': 'MSD',
    'age' : 30
 }, {upsert: true})                                       If it dosent find a match then a row will be added with the mentioned fields

<--------------------------------Insert and Delete Operations----------------------------->

db.collection.insert()                                    To insert a document
db.collection.insertOne()                                 To insert a single document
db.collection.insertMany()                                To insert more than one documents

db.collection.remove({ title: "Technology" })             To delete a document that match this query
db.collection.delete({ title: "Technology" })             This is also used to delete but this command comes with more control
db.collection.deleteOne({ title: "Technology" })          This will delete the 1st match 
db.collection.deleteMany({ title: "Technology" })         This will delete all match

<------------------------------------MongoDB Operators-------------------------------->

 db.<collection name>.update({name:'MSD'},
 {$inc:{
        age: 2
 }})                                                      $inc is the increment operator

 db.<collection name>.update({name:'MSD'},
 {$rename:{
        age: 'birthday'
 }})                                                      $rename renames the field

 db.<collection name>.find({age:{$lt: 30}})               $lt is the less than operator

 db.<collection name>.find({age:{$gt: 30}})               $gt is the greater than operator

 db.<collection name>.find({age:{$gte: 30}})              $gte is the greater than equal to operator

 db.<collection name>.find({age:{$lte: 30}})              $lte is the less than equal to operator

 <------------------------------------Aggregation Pipeline-------------------------------->

{
   $lookup:
     {
       from: <collection to join>,
       localField: <field from the input documents>,
       foreignField: <field from the documents of the "from" collection>,
       as: <output array field>
     }
}                                                         $lookup operator included with the aggregation pipeline is the same as the left outer join
